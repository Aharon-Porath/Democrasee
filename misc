ejs and stylus:

Microsoft Windows [Version 6.1.7601]
Copyright (c) 2009 Microsoft Corporation.  All rights reserved.

C:\Users\saar>express /?

C:\Users\saar\AppData\Roaming\npm\node_modules\express\bin\express:340
    if (err && 'ENOENT' != err.code) throw err;
                                           ^
Error: UNKNOWN, unknown error 'C:\?'

C:\Users\saar>express -h

  Usage: express [options] [path]

  Options:
    -s, --sessions           add session support
    -t, --template <engine>  add template <engine> support (jade|ejs). default=j
ade
    -c, --css <engine>       add stylesheet <engine> support (stylus). default=p
lain css
    -v, --version            output framework version
    -h, --help               output help information


C:\Users\saar>cd\wwww
The system cannot find the path specified.

C:\Users\saar>cd..

C:\Users>cd\

C:\>cd www

C:\www>express -t ejs -c stylus
destination is not empty, continue? n
aborting

------------------------------------------
mongoose:
C:\www\testExpress>npm install mongoose
------------------------------------------
mailer:
C:\www\testExpress>npm install nodemailer

----------------------------------------------------------
i have downloaded fiddler(web debugging proxy)
------------------------------------------------------------------
    C:\www>express project -t ejs -c stylus

   create : project
   create : project/package.json
   create : project/app.js
   create : project/public
   create : project/public/javascripts
   create : project/public/images
   create : project/views
   create : project/views/layout.ejs
   create : project/views/index.ejs
   create : project/public/stylesheets
   create : project/public/stylesheets/style.styl
   create : project/routes
   create : project/routes/index.js

   dont forget to install dependencies:
   $ cd project && npm install


C:\www>cd project

C:\www\project>npm install
npm http GET https://registry.npmjs.org/stylus
npm http GET https://registry.npmjs.org/ejs
npm http GET https://registry.npmjs.org/express/2.5.5
npm http 304 https://registry.npmjs.org/ejs
npm http 304 https://registry.npmjs.org/express/2.5.5
npm http 200 https://registry.npmjs.org/stylus
npm http GET https://registry.npmjs.org/stylus/-/stylus-0.23.0.tgz
npm http 200 https://registry.npmjs.org/stylus/-/stylus-0.23.0.tgz
npm http GET https://registry.npmjs.org/mime
npm http GET https://registry.npmjs.org/qs
npm http GET https://registry.npmjs.org/mkdirp/0.0.7
npm http GET https://registry.npmjs.org/connect
npm http GET https://registry.npmjs.org/growl/1.1.0
npm http GET https://registry.npmjs.org/cssom/0.2.1
npm http 304 https://registry.npmjs.org/qs
npm http 304 https://registry.npmjs.org/mime
npm http 304 https://registry.npmjs.org/mkdirp/0.0.7
npm http 304 https://registry.npmjs.org/connect
npm http 200 https://registry.npmjs.org/growl/1.1.0
npm http GET https://registry.npmjs.org/growl/-/growl-1.1.0.tgz
npm http 200 https://registry.npmjs.org/cssom/0.2.1
npm http GET https://registry.npmjs.org/cssom/-/cssom-0.2.1.tgz
npm http GET https://registry.npmjs.org/formidable
npm http 200 https://registry.npmjs.org/growl/-/growl-1.1.0.tgz
npm http 200 https://registry.npmjs.org/cssom/-/cssom-0.2.1.tgz
npm http 304 https://registry.npmjs.org/formidable
ejs@0.6.1 ./node_modules/ejs
express@2.5.5 ./node_modules/express
├── mime@1.2.4
├── mkdirp@0.0.7
├── qs@0.4.1
└── connect@1.8.5
stylus@0.23.0 ./node_modules/stylus
├── growl@1.1.0
├── mkdirp@0.0.7
└── cssom@0.2.1

C:\www\project>
-------------------------------------------------------------------------------------------------------------

C:\www\uru>npm install connect-mongo

-------------------------------------------------------------------------------------------------------------

data base stuff:

C:\Users\saar>mongo
MongoDB shell version: 2.0.1
connecting to: test
> show dbs
local   (empty)
uru     0.078125GB
> use uru
switched to db uru
> show collection
Sun Feb 19 12:05:19 uncaught exception: don't know how to show [collection]
> show collections
Session
informationitems
subjects
system.indexes
users
> db.informationitems.help()
DBCollection help
        db.informationitems.find().help() - show DBCursor help
        db.informationitems.count()
        db.informationitems.dataSize()
        db.informationitems.distinct( key ) - eg. db.informationitems.distinct(
'x' )
        db.informationitems.drop() drop the collection
        db.informationitems.dropIndex(name)
        db.informationitems.dropIndexes()
        db.informationitems.ensureIndex(keypattern[,options]) - options is an ob
ject with these possible fields: name, unique, dropDups
        db.informationitems.reIndex()
        db.informationitems.find([query],[fields]) - query is an optional query
filter. fields is optional set of fields to return.
                                                      e.g. db.informationitems.f
ind( {x:77} , {name:1, x:1} )
        db.informationitems.find(...).count()
        db.informationitems.find(...).limit(n)
        db.informationitems.find(...).skip(n)
        db.informationitems.dd(...).sort(...)
        db.informationitems.findOne([query])
        db.informationitems.findAndModify( { update : ... , remove : bool [, que
ry: {}, sort: {}, 'new': false] } )
        db.informationitems.getDB() get DB object associated with collection
        db.informationitems.getIndexes()
        db.informationitems.group( { key : ..., initial: ..., reduce : ...[, con
d: ...] } )
        db.informationitems.mapReduce( mapFunction , reduceFunction , <optional
params> )
        db.informationitems.remove(query)
        db.informationitems.renameCollection( newName , <dropTarget> ) renames t
he collection.
        db.informationitems.runCommand( name , <options> ) runs a db command wit
h the given name where the first param is the collection name
        db.informationitems.save(obj)
        db.informationitems.stats()
        db.informationitems.storageSize() - includes free space allocated to thi
s collection
        db.informationitems.totalIndexSize() - size in bytes of all the indexes
        db.informationitems.totalSize() - storage allocated for all data and ind
exes
        db.informationitems.update(query, object[, upsert_bool, multi_bool])
        db.informationitems.validate( <full> ) - SLOW
        db.informationitems.getShardVersion() - only for use with sharding
> db.informationitems.getIndexes()
[
        {
                "v" : 1,
                "key" : {
                        "_id" : 1
                },
                "ns" : "uru.informationitems",
                "name" : "_id_"
        }
]
>
-----------------------------------------------------------------------------------------------------

//database stuff :

> db.posts.count({})
178
> db.posts.count({is_hidden: {$exist: false}})
0
> db.posts.count({is_hidden: {$exist: true}})
0
> db.posts.count({is_hidden: null})
172
    > db.posts.update({is_hidden: null}, {$set: {is_hidden: false}})
> db.posts.count({is_hidden: null})
171
> db.posts.update({is_hidden: null}, {$set: {is_hidden: false}}, false, true)
> db.posts.count({is_hidden: null})
0
>


<!-- <a href="<%= settings.root_path %><%= main_link %>">-->


db.cycles.find({"_id": ObjectId("5047023a9e56a502000014f5")},{"is_private":1})









































































