
scripts

fix users tokens
db.users.find().forEach(function(obj){
    if (obj.tokens > obj.num_of_extra_tokens+ 9)
    {   obj.tokens = obj.num_of_extra_tokens+ 9;
        db.users.save(obj);
    }
})

//candidate populate pary name



fix discussion conneced people
    var isUserInDiscussion = function(discussion_users, user_id) {

        for(var i=0; i<discussion_users.length; i++){
            if(discussion_users[i].user_id + '' == user_id + '')
                return true;
        };
        return false;
    };

    db.discussions.find().forEach(function(obj){
        print('checking ' + obj._id);
        db.grades.find({"discussion_id": obj._id}).forEach(function(grade_obj){
            var user = db.users.findOne({"_id": grade_obj.user_id});
            if(user && user._id && !isUserInDiscussion(obj.users, user._id)) {
                print('adding user to discussion ' + user.email);
                obj.users.push({ user_id : user._id, join_date: new Date()});
                db.discussions.save(obj);
            }
            else
               print('couldnt find user ' + grade_obj.user_id);
        });
    });

insert noti url
    db.notifications.find().forEach(function(noti){
        var disc = db.discussions.findOne({"_id": noti.notificators[0].sub_entity_id});
        if(!disc){
            disc = db.discussions.findOne({"_id": noti.entity_id});
        }
        if(disc){
            noti.url = "/discussions/" + disc._id;
            print(noti.url);
            db.notifications.save(noti);
        }
    })

     db.notifications.find().forEach(function(noti){
            var disc = db.discussions.findOne({"_id": noti.notificators[0].sub_entity_id});
            if(!disc){
                disc = db.discussions.findOne({"_id": noti.entity_id});
            }
            if(disc){
               print(disc._id + '');
            }
        })


    db.users.find().forEach(function(user){
                  print(user._id + '');
    })
//put default category on each action

db.actions.find().forEach(function(action){
            if(!action.category){
                 print(action._id + '');
                action.category = "4f9eaaf583fbf3fc0f000059";
            }
        })

 db.actions.find().forEach(function(action){

                  print(action._id + '');

         })
------------------------------------------------------------------------------------


//the following are for the new timeline default popups

        //change actions, so that one action can have more than one cycle
        db.actions.find().forEach(function (obj) {
            var cycle_id = obj.cycle_id;
            if (!obj.cycle_id.length) {
                print(cycle_id);
                obj.cycle_id = [{}];
                obj.cycle_id[0].cycle = cycle_id;
                obj.cycle_id[0].is_displayed = false;
                db.actions.save(obj);
            }
        })


        ---------------------------------------------------------------

        db.cycles.find().forEach(function (obj) {
            if(!obj.creation_date.date){
                print(obj.creation_date);
                var creation_date = {date: obj.creation_date, is_displayed: false};

                 obj.creation_date = creation_date;
                 db.cycles.save(obj);
            }
        })


--------------------------------------------------------------------------------------

// fix action going_users

db.actions.find().forEach(function(action){
	db.joins.find({"action_id": action._id}).forEach(function(join) {
		//var user = action.going_users.filter(function(going_user) {
		//	return  going_user.user_id + "" == join.user_id + ""
		//})

		var flag = false;
		for(var i=0; i<action.going_users.length; i++){
			if(action.going_users[i].user_id + "" == join.user_id + "") flag = true;
		}

		print(flag);

		// user has joined action but isn't in going_users list
		if(!flag) {
			print(join.user_id);

			var new_going_user = {
				user_id: join.user_id,
				join_date: join.creation_date
			}
			action.going_users.push(new_going_user);
		}
	})

	db.actions.save(action);
})

